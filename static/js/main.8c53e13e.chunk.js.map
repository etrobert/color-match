{"version":3,"sources":["atoms.ts","Nav.tsx","pictures/chemisePapi.jpeg","ColorPicker.tsx","NewGarment.tsx","FeatherIcon.tsx","NewGarmentButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["viewState","atom","key","default","Nav","setView","useSetRecoilState","onClick","ColorComponent","color","style","width","height","backgroundColor","ColorPicker","palette","className","Object","entries","map","value","undefined","type","getHex","NewGarment","photo","chemisePapi","useState","setPalette","useEffect","Vibrant","from","getPalette","then","console","log","src","FeatherIcon","name","options","dangerouslySetInnerHTML","__html","feather","icons","toSvg","NewGarmentButton","ref","useRef","accept","display","current","click","classNames","App","view","useRecoilValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAIMA,G,MAAYC,YAAW,CAC3BC,IAAK,OACLC,QAAS,a,OCiBIC,EApBH,WACV,IAAMC,EAAUC,YAAkBN,GAElC,OACE,8BACE,+BACE,6BACE,wBAAQO,QAAS,kBAAMF,EAAQ,eAA/B,2BAEF,6BACE,wBAAQE,QAAS,kBAAMF,EAAQ,YAA/B,6BAEF,6BACE,wBAAQE,QAAS,kBAAMF,EAAQ,eAA/B,gC,OChBK,MAA0B,yC,iBCInCG,G,OAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACrB,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,IACRC,gBAAiBJ,OAuBRK,EAlBK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QACrB,OACE,uBAAMC,UAAU,cAAhB,UACGC,OAAOC,QAAQH,GAASI,KACvB,mCAAEjB,EAAF,KAAOkB,EAAP,iBACYC,IAAVD,GACE,kCACE,uBAAOE,KAAK,aACXpB,EACD,cAAC,EAAD,CAAgBO,MAAOW,EAAMG,iBAIrC,wBAAQD,KAAK,SAAb,yBCMSE,EArBI,WACjB,IAAMC,EAAQC,EAEd,EAA8BC,qBAA9B,mBAAOZ,EAAP,KAAgBa,EAAhB,KAUA,OATAC,qBAAU,WACRC,IAAQC,KAAKN,GACVO,aACAC,MAAK,SAAClB,GAAD,OAAaa,EAAWb,QAC/B,CAACU,IAEJI,qBAAU,WACRK,QAAQC,IAAIpB,KACX,CAACA,IAEF,qCACE,qBAAKqB,IAAKX,SACGJ,IAAZN,GAAyB,cAAC,EAAD,CAAaA,QAASA,Q,yCCXvCsB,EAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAClB,sBACEC,wBAAyB,CACvBC,OAAQC,IAAQC,MAAML,GAAMM,MAApB,aACNlC,MAAO,kBACJ6B,QCqBIM,G,OAvBU,SAAC,GAA0B,IAAxB7B,EAAuB,EAAvBA,UACpB8B,EAAMC,iBAAyB,MACrC,OACE,qCACE,uBACEzB,KAAK,OACL0B,OAAO,UACPF,IAAKA,EACLpC,MAAO,CAAEuC,QAAS,UAEpB,wBACE1C,QAAS,kCAAMuC,EAAII,eAAV,aAAM,EAAaC,SAC5BnC,UAAWoC,IAAW,mBAAoBpC,GAF5C,SAIE,cAAC,EAAD,CACEsB,KAAK,OACLC,QAAS,CAAE5B,MAAO,SAAUC,OAAQ,mBCJ/ByC,MAdf,WACE,IAAMC,EAAOC,YAAevD,GAE5B,OACE,sBAAKgB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACU,eAATsC,GAAyB,cAAC,EAAD,IAChB,YAATA,GAAsB,UACb,eAATA,GAAyB,iBCHjBE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8c53e13e.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\ntype View = 'newGarment' | 'outfits' | 'collection';\n\nconst viewState = atom<View>({\n  key: 'View',\n  default: 'outfits',\n});\n\nexport { viewState };\n","import { useSetRecoilState } from 'recoil';\nimport { viewState } from './atoms';\n\nconst Nav = () => {\n  const setView = useSetRecoilState(viewState);\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <button onClick={() => setView('newGarment')}>Add Garment</button>\n        </li>\n        <li>\n          <button onClick={() => setView('outfits')}>Create Outfit</button>\n        </li>\n        <li>\n          <button onClick={() => setView('collection')}>My clothes</button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/chemisePapi.1cbdb00b.jpeg\";","import { Palette } from 'node-vibrant/lib/color';\n\nimport './ColorPicker.css';\n\nconst ColorComponent = ({ color }: { color: string }) => (\n  <div\n    style={{\n      width: '100%',\n      height: 200,\n      backgroundColor: color,\n    }}\n  />\n);\n\nconst ColorPicker = ({ palette }: { palette: Palette }) => {\n  return (\n    <form className=\"ColorPicker\">\n      {Object.entries(palette).map(\n        ([key, value]) =>\n          value !== undefined && (\n            <label>\n              <input type=\"checkbox\" />\n              {key}\n              <ColorComponent color={value.getHex()} />\n            </label>\n          )\n      )}\n      <button type=\"submit\">Confirm</button>\n    </form>\n  );\n};\n\nexport default ColorPicker;\n","import robe from './pictures/robe.jpeg';\nimport redOrange from './pictures/red-orange.jpg';\nimport robe2 from './pictures/robe2.jpeg';\nimport chemiseSatin from './pictures/chemiseSatin.jpeg';\nimport pullViolet from './pictures/pullViolet.jpeg';\nimport bite from './pictures/bite.jpeg';\nimport chemisePapi from './pictures/chemisePapi.jpeg';\nimport { useEffect, useState } from 'react';\nimport Vibrant from 'node-vibrant';\nimport { Palette } from 'node-vibrant/lib/color';\nimport ColorPicker from './ColorPicker';\n\nconst NewGarment = () => {\n  const photo = chemisePapi;\n\n  const [palette, setPalette] = useState<Palette>();\n  useEffect(() => {\n    Vibrant.from(photo)\n      .getPalette()\n      .then((palette) => setPalette(palette));\n  }, [photo]);\n\n  useEffect(() => {\n    console.log(palette);\n  }, [palette]);\n  return (\n    <>\n      <img src={photo} />\n      {palette !== undefined && <ColorPicker palette={palette} />}\n    </>\n  );\n};\n\nexport default NewGarment;\n","import feather, { FeatherAttributes } from 'feather-icons';\n\ntype Props = {\n  name: string;\n  options?: FeatherAttributes;\n};\n\nconst FeatherIcon = ({ name, options }: Props) => (\n  <span\n    dangerouslySetInnerHTML={{\n      __html: feather.icons[name].toSvg({\n        style: 'display: block', // TODO combine with style from options\n        ...options,\n      }),\n    }}\n  />\n);\nexport default FeatherIcon;\n","import classNames from 'classnames';\nimport { useRef } from 'react';\nimport FeatherIcon from './FeatherIcon';\n\nimport './NewGarmentButton.css';\n\ntype Props = {\n  className?: string;\n};\n\nconst NewGarmentButton = ({ className }: Props) => {\n  const ref = useRef<HTMLInputElement>(null);\n  return (\n    <>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        ref={ref}\n        style={{ display: 'none' }}\n      />\n      <button\n        onClick={() => ref.current?.click()}\n        className={classNames('NewGarmentButton', className)}\n      >\n        <FeatherIcon\n          name=\"plus\"\n          options={{ width: '2.5rem', height: '2.5rem' }}\n        />\n      </button>\n    </>\n  );\n};\n\nexport default NewGarmentButton;\n","import { useRecoilValue } from 'recoil';\nimport './App.css';\nimport { viewState } from './atoms';\nimport FeatherIcon from './FeatherIcon';\nimport Nav from './Nav';\nimport NewGarment from './NewGarment';\nimport NewGarmentButton from './NewGarmentButton';\n\nfunction App() {\n  const view = useRecoilValue(viewState);\n\n  return (\n    <div className=\"App\">\n      <NewGarmentButton />\n      <Nav />\n      {view === 'newGarment' && <NewGarment />}\n      {view === 'outfits' && 'Outfits'}\n      {view === 'collection' && 'Collection'}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}